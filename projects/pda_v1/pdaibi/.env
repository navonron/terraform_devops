# Setup Proxies
echo "Initializing Intel Proxies..."
export HTTP_PROXY="http://proxy-dmz.intel.com:911"
export HTTPS_PROXY="http://proxy-dmz.intel.com:912"
export no_proxy="localhost,127.0.0.1,intel.com,windows.net,azure.net"

# Variables needed for Azure connection.
echo "Setting up Terraform variables..."
export ARM_CLIENT_ID="69cfefd2-a820-4af8-970f-d4395dddecdd"               # Service Principal Client ID which has access to create the resources in `ARM_SUBSCRIPTION_ID` and persist the terraform remote state in `TF_BACKEND_STORAGE_ACCOUNT`
export ARM_CLIENT_SECRET="KHh8Q~vGWb75CV3FN.PFpPs~c~cHKNEWaAg2Udty"       # Service Principal Client Secret
export ARM_SUBSCRIPTION_ID="1fd3090a-949b-4ab5-b266-8fbb6701f677"         # Subscription where the resource needs to be created. # Subscription id should be added in the <environment>.tfvars
export ARM_TENANT_ID="46c98d88-e344-4ed4-8496-4ed7712e255d"               # Secrets needed for Azure Backend and Azure Provider

# Variables needed for Backend
echo "Setting up Terraform backend variables..."
export TF_BACKEND_SUBSCRIPTION_ID="1fd3090a-949b-4ab5-b266-8fbb6701f677"  # Enterprise platform subscription
export TF_BACKEND_RESOURCE_GROUP="rg-pdaibi-terraform-dev"                # rg-pdaibi-terraform-dev for dev.
export TF_BACKEND_STORAGE_ACCOUNT="sapdaibiterraformdev"                  # sapdaibiterraformdev for dev and.
export PROJECT_ID="pda.pdaibi"                                            # Vertical_id for verticals eg: smg and vertical_id.apt_id for apt eg: smg.retail
export PROJECT_ENVIRONMENT="dev"                                          # dev or qa or prod

# Other
export TF_LOG="INFO"


export PATH="$HOME:$PATH"
export TF_LOG_PATH="logging.log"